#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Oct 22 21:00:29 2020

@author: prathamesh
"""
from flask import Flask, render_template, request
import jsonify
import requests
import pickle
model = pickle.load(open('model1.pkl', 'rb'))

app = Flask(__name__)


@app.route('/')
def home():
    return render_template('index.html')

@app.route('/predict',methods=['POST'])
def predict():
    '''
    For rendering results on HTML GUI
    '''
    agency_mapping = {'EPX': 0.5012043586312369, 'C2B': 0.20292487096157522, 'CWT': 0.1302427834066144, 'JZI': 0.0883005161536991, 'LWC': 0.015408143758363602, 'SSI': 0.014911106862932517, 'JWT': 0.010514242018734467, 'RAB': 0.010074555534314663, 'TST': 0.007532020646147964, 'KML': 0.005983559548843434, 'ART': 0.004263047218505066, 'CCR': 0.0029822213725865035, 'TTW': 0.001988147581724336, 'CBH': 0.001452877078952399, 'CSR': 0.0011470082202255784, 'ADM': 0.001070541005543873}
    product_name = {'Cancellation Plan': 0.25337411584783026, '2 way Comprehensive Plan': 0.20177786274134965,'Rental Vehicle Excess Insurance': 0.1302427834066144, 'Bronze Plan': 0.09028866373542344, 'Basic Plan': 0.07727012043586312, 'Silver Plan': 0.054712292104760085, '1 way Comprehensive Plan': 0.046052380042056966, 'Annual Silver Plan': 0.044886255018160966, 'Value Plan': 0.03748805199770598, 'Ticket Protector': 0.014911106862932517, 'Travel Cruise Protect': 0.007532020646147964, 'Gold Plan': 0.007264385394761996, 'Annual Gold Plan': 0.00563945708277576, 'Comprehensive Plan': 0.005314471420378513, 'Single Trip Travel Protect Gold': 0.004798317721277002, 'Annual Travel Protect Gold': 0.0034983750716880138, '24 Protect': 0.0031542726056203404, 'Premier Plan': 0.002695469317530109, 'Single Trip Travel Protect Silver': 0.0024851844771554194, 'Single Trip Travel Protect Platinum': 0.0019116803670426305, 'Annual Travel Protect Silver': 0.00175874593767922, 'Individual Comprehensive Plan': 0.0016058115083158095, 'Annual Travel Protect Platinum': 0.0009558401835213152, 'Spouse or Parents Comprehensive Plan': 0.00022940164404511567, 'Child Comprehensive Plan': 0.00015293442936341044}
    destination = {'SINGAPORE': 0.27226151787421143, 'THAILAND': 0.0872108583444848, 'MALAYSIA': 0.08333014719938826, 'CHINA': 0.07472758554769643,  'AUSTRALIA': 0.057560695851653604, 'INDONESIA': 0.04809787803479258, 'UNITED STATES': 0.04198050086025616, 'PHILIPPINES': 0.03435289619575607, 'HONG KONG': 0.03393232651500669, 'JAPAN': 0.030797170713056776, 'INDIA': 0.03051041865800038, 'VIET NAM': 0.023035748422863697, 'KOREA, REPUBLIC OF': 0.022022557828331103, 'UNITED KINGDOM': 0.019957943031925062, 'TAIWAN, PROVINCE OF CHINA': 0.015752246224431277, 'MYANMAR': 0.011298030969221946, 'BRUNEI DARUSSALAM': 0.010800994073790862, 'ITALY': 0.0077996558975339325, 'CANADA': 0.007512903842477538, 'NEW ZEALAND': 0.007340852609443701, 'CAMBODIA': 0.006882049321353469, 'FRANCE': 0.006385012425922386, 'GERMANY': 0.006193844389218123, 'NETHERLANDS': 0.0057923915121391705, 'SPAIN': 0.005104186580003824, 'UNITED ARAB EMIRATES': 0.004071879181800803, 'SWITZERLAND': 0.003555725482699293, 'SRI LANKA': 0.0033454406423246035, 'SOUTH AFRICA': 0.002924870961575225, 'NEPAL': 0.002446950869814567, 'NORWAY': 0.0022940164404511567, "LAO PEOPLE'S DEMOCRATIC REPUBLIC": 0.002007264385394762, 'IRELAND': 0.001701395526667941, 'ICELAND': 0.001567577900974957, 'DENMARK': 0.001452877078952399, 'MACAO': 0.001376409864270694, 'GREECE': 0.001319059453259415, 'PERU': 0.001319059453259415, 'PORTUGAL': 0.0012808258459185624, 'BANGLADESH': 0.0012617090422481362, 'AUSTRIA': 0.0012617090422481362, 'FINLAND': 0.0012043586312368573, 'TURKEY': 0.0011852418275664308, 'RUSSIAN FEDERATION': 0.0009749569871917416, 'CZECH REPUBLIC': 0.0009367233798508889, 'SAUDI ARABIA': 0.0008411393614987574, 'SWEDEN': 0.0007646721468170522, 'CROATIA': 0.000688204932135347, 'BELGIUM': 0.0006117377174536417, 'ISRAEL': 0.0005352705027719365, 'MEXICO': 0.0005161536991015102, 'MONGOLIA': 0.000497036895431084, 'POLAND': 0.0004779200917606576, 'BRAZIL': 0.00045880328809023134, 'MALDIVES': 0.00036321926973809977, 'PAKISTAN': 0.00036321926973809977, 'EGYPT': 0.00032498566239724715, 'HUNGARY': 0.0002867520550563946, 'ROMANIA': 0.00026763525138596826, 'TANZANIA, UNITED REPUBLIC OF': 0.000248518447715542, 'ARGENTINA': 0.00022940164404511567, 'KENYA': 0.00022940164404511567, 'CYPRUS': 0.00022940164404511567, 'MOROCCO': 0.00021028484037468936, 'QATAR': 0.00019116803670426305, 'BAHRAIN': 0.00019116803670426305, 'MALTA': 0.00019116803670426305, 'KAZAKHSTAN': 0.00019116803670426305, 'UKRAINE': 0.00017205123303383674, 'COLOMBIA': 0.00017205123303383674, 'MAURITIUS': 0.00017205123303383674, 'OMAN': 0.00017205123303383674, 'JORDAN': 0.00017205123303383674, 'FIJI': 0.00017205123303383674, 'LUXEMBOURG': 0.00015293442936341044, 'UZBEKISTAN': 0.00015293442936341044, 'CHILE': 0.00013381762569298413, 'SLOVENIA': 0.00013381762569298413, 'ESTONIA': 0.00013381762569298413, 'GEORGIA': 0.00013381762569298413, 'AZERBAIJAN': 0.00011470082202255783, 'BOLIVIA': 9.558401835213153e-05, 'GUAM': 9.558401835213153e-05, 'KUWAIT': 9.558401835213153e-05, 'TUNISIA': 7.646721468170522e-05, 'KYRGYZSTAN': 7.646721468170522e-05, 'VENEZUELA': 7.646721468170522e-05, 'COSTA RICA': 7.646721468170522e-05, 'VANUATU': 5.735041101127892e-05, 'LEBANON': 5.735041101127892e-05, 'LITHUANIA': 5.735041101127892e-05, 'ETHIOPIA': 5.735041101127892e-05, 'BERMUDA': 3.823360734085261e-05, 'BELARUS': 3.823360734085261e-05, 'BHUTAN': 3.823360734085261e-05, 'ZAMBIA': 1.9116803670426305e-05, 'TURKMENISTAN': 1.9116803670426305e-05}

    if request.method == 'POST':
       Agency_Type_Travel = request.form['Agnecy_Type']
       Age = int(request.form['Age'])
       Commision = int(request.form['Commision'])
       Net_Sales = request.form['Net_Sales']
       Dest_fe = request.form['Destination']
       Product_Name_fe = request.form['Product_Name']
       Distribution = request.form['Distribution']
       Duration = int(request.form['Duration'])
       Agency_fe = request.form['Agnecy']
       
       Product_Name = Product_Name_fe
       
       if Age > 100:
           Age = 100
           
       if Duration > 540 :
           Duration = 540

       if Agency_Type_Travel == 'Travel':
           Agency_Type_Travel = 1
       else:
           Agency_Type_Travel = 0
           
       if Distribution == 'Online':
           Distribution = 1
       else:
           Distribution = 0
           
       Agency_fe = agency_mapping.get(Agency_fe)
       Product_Name_fe = product_name.get(Product_Name_fe)
       Dest_fe = destination.get(Dest_fe)

       prediction = model.predict([[Duration, Net_Sales, Commision, Age,Dest_fe, Agency_fe, Product_Name_fe, Agency_Type_Travel, Distribution]])
       output = round(prediction[0],2)  
       print(output)
       
       if output > 0:
            return render_template('index.html', prediction_text="Customer will  claim ")
       else: 
            return render_template('index.html', prediction_text="Customer will not claim")
   

    
       
    return render_template('index.html', prediction_text='Customer will Claim against C2B policy')
    
    

if __name__=="__main__":
    app.run(debug=True)
    